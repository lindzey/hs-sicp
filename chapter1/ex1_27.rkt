#lang planet neil/sicp

;; runs the fermat test on input number:
;; a^n mod n = a mod n where n is a candidate prime number, and a is every int < n
;; The carmichael numbers are the numbers that are not prime and yet pass the test
;; So, for each number in footnote 47, test is-prime? and passes-fermat?

(define (is-carmichael? n)
  (and (not (prime? n)) (passes-fermat? n)))

; this is the O(sqrt(n)) exact test
(define (prime? n)
  (= n (smallest-divisor n)))
   
(define (smallest-divisor n)
  (find-divisor n 2))

(define (find-divisor n test-divisor)
  (cond ((> (square test-divisor) n) n)
        ((divides? test-divisor n) test-divisor)
        (else (find-divisor n (+ test-divisor 1)))))

(define (divides? test-divisor n)
  (= 0 (remainder n test-divisor)))
(define (square n) (* n n))

; this cycles through all a < n and checks the fermat test
(define (passes-fermat? n)
  (fermat-helper n (- n 1)))
(define (fermat-helper n a)
  (cond ((= a 0) true)
        ((= a (expmod a n n)) (fermat-helper n (- a 1)))
        (else false)))
(define (expmod base exp m) 
  (cond ((= exp 0) 1)
        ((even? exp) (remainder (square (expmod base (/ exp 2) m))
                                m))
        (else (remainder (* base (expmod base (- exp 1) m))
                         m))))

;; testing for the provided carmichael numbers (and a few primes thown in)
(newline)
(display "Testing known non-primes for passing fermat")
(newline)
(passes-fermat? 567)
(passes-fermat? 1111)
(passes-fermat? 1737)
(passes-fermat? 2469)

(display "Testing Carmichael numbers")
(newline)
(display " ... prime?")
(newline)
(prime? 561)
(prime? 1105)
(prime? 1729)
(prime? 2465)
(prime? 2821)
(prime? 6601)
(display " ... passes fermat?")
(newline)
(passes-fermat? 561)
(passes-fermat? 1105)
(passes-fermat? 1729)
(passes-fermat? 2465)
(passes-fermat? 2821)
(passes-fermat? 6601)
(display " ... carmichael?")
(newline)
(is-carmichael? 561)
(is-carmichael? 1105)
(is-carmichael? 1729)
(is-carmichael? 2465)
(is-carmichael? 2821)
(is-carmichael? 6601)
(display "Testing known primes")
(newline)
(display " ... prime?")
(newline)
(prime? 563)
(prime? 1109)
(prime? 1733)
(prime? 2467)
(prime? 2833)
(prime? 6607)
(display " ... passes fermat?")
(newline)
(passes-fermat? 563)
(passes-fermat? 1109)
(passes-fermat? 1733)
(passes-fermat? 2467)
(passes-fermat? 2833)
(passes-fermat? 6607)
(display " ... carmichael?")
(newline)
(is-carmichael? 563)
(is-carmichael? 1109)
(is-carmichael? 1733)
(is-carmichael? 2467)
(is-carmichael? 2833)
(is-carmichael? 6607)
